"""basic structure -completed with some errors

Revision ID: b5d0d9eed142
Revises: 
Create Date: 2025-06-13 05:28:21.389279

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'b5d0d9eed142'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('academic_terms', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_dates'))

    with op.batch_alter_table('alerts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_enrollment'))
        batch_op.drop_index(batch_op.f('idx_severity'))
        batch_op.drop_index(batch_op.f('idx_unread'))

    with op.batch_alter_table('assessment_submissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_assessment'))
        batch_op.drop_index(batch_op.f('idx_enrollment'))

    with op.batch_alter_table('assessments', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('idx_due_date'))
        batch_op.drop_index(batch_op.f('idx_offering'))

    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('idx_date'))
        batch_op.drop_index(batch_op.f('idx_enrollment_date'))
        batch_op.drop_index(batch_op.f('idx_status'))

    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('idx_action'))
        batch_op.drop_index(batch_op.f('idx_created'))
        batch_op.drop_index(batch_op.f('idx_user'))

    with op.batch_alter_table('course_offerings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_term_course'))

    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('idx_course_code'))
        batch_op.drop_index(batch_op.f('idx_department'))

    with op.batch_alter_table('enrollments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_status'))
        batch_op.drop_index(batch_op.f('idx_student_offering'))

    with op.batch_alter_table('faculty', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('idx_department'))
        batch_op.drop_constraint(batch_op.f('faculty_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('feature_cache', schema=None) as batch_op:
        batch_op.alter_column('calculated_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('idx_date'))

    with op.batch_alter_table('interventions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_enrollment'))

    with op.batch_alter_table('lms_activities', schema=None) as batch_op:
        batch_op.alter_column('activity_timestamp',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('idx_enrollment_timestamp'))
        batch_op.drop_index(batch_op.f('idx_type'))

    with op.batch_alter_table('lms_daily_summary', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_date'))

    with op.batch_alter_table('lms_sessions', schema=None) as batch_op:
        batch_op.alter_column('login_time',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.alter_column('logout_time',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_enrollment'))
        batch_op.drop_index(batch_op.f('idx_login_time'))

    with op.batch_alter_table('model_versions', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('predictions', schema=None) as batch_op:
        batch_op.alter_column('confidence_score',
               existing_type=mysql.DECIMAL(precision=3, scale=2),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('idx_enrollment_date'))
        batch_op.drop_index(batch_op.f('idx_risk_level'))

    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('idx_program'))
        batch_op.drop_index(batch_op.f('idx_status'))
        batch_op.drop_constraint(batch_op.f('students_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('system_config', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('last_login',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_email'))
        batch_op.drop_index(batch_op.f('idx_user_type'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_user_type'), ['user_type'], unique=False)
        batch_op.create_index(batch_op.f('idx_email'), ['email'], unique=False)
        batch_op.alter_column('last_login',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('system_config', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))

    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('students_ibfk_1'), 'users', ['user_id'], ['user_id'], ondelete='SET NULL')
        batch_op.create_index(batch_op.f('idx_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('idx_program'), ['program_code'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('predictions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_risk_level'), ['risk_level'], unique=False)
        batch_op.create_index(batch_op.f('idx_enrollment_date'), ['enrollment_id', 'prediction_date'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('confidence_score',
               existing_type=mysql.DECIMAL(precision=3, scale=2),
               nullable=True)

    with op.batch_alter_table('model_versions', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('lms_sessions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_login_time'), ['login_time'], unique=False)
        batch_op.create_index(batch_op.f('idx_enrollment'), ['enrollment_id'], unique=False)
        batch_op.alter_column('logout_time',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('login_time',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=False)

    with op.batch_alter_table('lms_daily_summary', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_date'), ['summary_date'], unique=False)

    with op.batch_alter_table('lms_activities', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_type'), ['activity_type'], unique=False)
        batch_op.create_index(batch_op.f('idx_enrollment_timestamp'), ['enrollment_id', 'activity_timestamp'], unique=False)
        batch_op.alter_column('activity_timestamp',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=False)

    with op.batch_alter_table('interventions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_enrollment'), ['enrollment_id'], unique=False)

    with op.batch_alter_table('feature_cache', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_date'), ['feature_date'], unique=False)
        batch_op.alter_column('calculated_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('faculty', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('faculty_ibfk_1'), 'users', ['user_id'], ['user_id'], ondelete='SET NULL')
        batch_op.create_index(batch_op.f('idx_department'), ['department'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('enrollments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_student_offering'), ['student_id', 'offering_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_status'), ['enrollment_status'], unique=False)

    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_department'), ['department'], unique=False)
        batch_op.create_index(batch_op.f('idx_course_code'), ['course_code'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('course_offerings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_term_course'), ['term_id', 'course_id'], unique=False)

    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_user'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_created'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('idx_action'), ['action'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('idx_enrollment_date'), ['enrollment_id', 'attendance_date'], unique=False)
        batch_op.create_index(batch_op.f('idx_date'), ['attendance_date'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('assessments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_offering'), ['offering_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_due_date'), ['due_date'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('assessment_submissions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_enrollment'), ['enrollment_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_assessment'), ['assessment_id'], unique=False)

    with op.batch_alter_table('alerts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_unread'), ['is_read', 'enrollment_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_severity'), ['severity'], unique=False)
        batch_op.create_index(batch_op.f('idx_enrollment'), ['enrollment_id'], unique=False)

    with op.batch_alter_table('academic_terms', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_dates'), ['start_date', 'end_date'], unique=False)

    # ### end Alembic commands ###
